searchState.loadedDescShard("windows_core", 0, "Learn more about Rust for Windows here: …\nA type representing an agile reference to a COM/WinRT …\nA WinRT array stores elements contiguously in a …\nA trait for retrieving the implementation behind a COM or …\nA BSTR string (BSTR) is a length-prefixed wide string.\nProvides low-level access to a COM interface.\nContains the error value\nAn error object consists of both an error code as well as …\nA type that you can use to declare and implement an event …\nA globally unique identifier (GUID) used to identify COM …\nReturns the canonical type name for the underlying object.\nAn error code value returned by most COM functions.\nA WinRT string (HSTRING) is reference-counted and …\nA unique identifier representing this interface.\nA WinRT object that may be used as a polymorphic stand-in …\nAll COM interfaces (and thus WinRT classes and interfaces) …\nProvides low-level access to an interface vtable.\nAn error object without any failure information.\nContains the success value\nA pointer to a constant null-terminated string of 8-bit …\nA pointer to a constant null-terminated string of 16-bit …\nA pointer to a null-terminated string of 8-bit Windows …\nA pointer to a null-terminated string of 16-bit Unicode …\nA specialized <code>Result</code> type that provides Windows error …\n<code>Weak</code> holds a non-owning reference to an object.\nRegisters a delegate with the event object.\nReturns the <code>Option</code> as a <code>Result</code> if the option is a <code>Some</code> …\nCalls <code>op</code> if <code>self</code> is a success code, otherwise returns …\nString data without the trailing 0\nString data without the trailing 0\nSafety\nReturns a raw pointer to the <code>HSTRING</code> buffer.\nReturns a raw pointer to the <code>PCSTR</code>\nReturns a raw pointer to the <code>PCWSTR</code>\nReturns a raw pointer to the <code>PSTR</code>\nReturns a raw pointer to the <code>PWSTR</code>.\nReturns the raw COM interface pointer. The resulting …\nReturns the raw COM interface pointer. The resulting …\nReturns a slice containing the entire array.\nGet the string as 16-bit wide characters (wchars).\nGet the string as 16-bit wide characters (wchars).\nString data without the trailing 0\nString data without the trailing 0.\nInvokes all of the event object’s registered delegates …\nAttempts to cast the current interface to another …\nAttempts to cast the current interface to another …\nClears the contents of the array.\nClears the event, removing all delegates.\nThe error code describing the error.\nAllow this string to be displayed.\nAllow this string to be displayed.\nAllow this string to be displayed.\nAllow this string to be displayed.\nAttempts to create a <code>Weak</code> reference to this object.\nAttempts to create a <code>Weak</code> reference to this object.\nAttempts to load the factory object for the given WinRT …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf the <code>Result</code> is <code>Ok</code> converts the <code>T::Abi</code> into <code>T</code>.\nCreates an <code>Interface</code> by taking ownership of the <code>raw</code> COM …\nCreates an <code>Interface</code> by taking ownership of the <code>raw</code> COM …\nConstruct a new <code>PCSTR</code> from a raw pointer\nConstruct a new <code>PCWSTR</code> from a raw pointer\nConstruct a new <code>PSTR</code> from a raw pointer\nConstruct a new <code>PWSTR</code> from a raw pointer.\nCreates an <code>Interface</code> that is valid so long as the <code>raw</code> COM …\nCreates an <code>Interface</code> that is valid so long as the <code>raw</code> COM …\nCreates an array from a pointer and length. The <code>len</code> …\nCreates a <code>GUID</code> for a “generic” WinRT type.\nCreates an array by copying the elements from the slice.\nCreates a <code>GUID</code> from a <code>u128</code> value.\nCreates a <code>GUID</code> with the given constant values.\nCreate a <code>BSTR</code> from a slice of 16 bit characters (wchars).\nCreate a <code>HSTRING</code> from a slice of 16 bit characters …\nMaps a Win32 error code to an HRESULT value.\nA literal HSTRING, length-prefixed wide string with a …\nA literal HSTRING, length-prefixed wide string with a …\nThe error information describing the error.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the raw COM interface pointer and releases …\nReturns the raw COM interface pointer and releases …\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the string is empty.\nReturns <code>true</code> if the string is empty.\nReturns <code>true</code> if <code>self</code> is a failure code.\nChecks whether the <code>PCSTR</code> is null\nChecks whether the <code>PCWSTR</code> is null\nChecks whether the <code>PSTR</code> is null\nChecks whether the <code>PWSTR</code> is null.\nReturns <code>true</code> if <code>self</code> is a success code.\nReturns the length of the array.\nReturns the length of the string.\nReturns the length of the string.\nThe error message describing the error.\nThe error message describing the error.\nCreates an empty array.\nCreates a new, empty <code>Event&lt;T&gt;</code>.\nCreate an empty <code>BSTR</code>.\nCreate an empty <code>HSTRING</code>.\nCreates an agile reference to the object.\nThis creates a new WinRT error object, capturing the stack …\nCreates a unique <code>GUID</code> value.\nCreates a new <code>Weak</code> object without any backing object.\nConstruct a null <code>PCSTR</code>\nConstruct a null <code>PCWSTR</code>\nConstruct a null <code>PSTR</code>\nConstruct a null <code>PWSTR</code>.\nConverts the <code>HRESULT</code> to <code>Result&lt;()&gt;</code>.\nCall <code>QueryInterface</code> on this interface\nCall <code>QueryInterface</code> on this interface\nRevokes a delegate’s registration from the event object.\nRetrieves a proxy to the target of the <code>AgileReference</code> …\nA literal UTF-8 string with a trailing null terminator.\nA literal UTF-8 string with a trailing null terminator.\nCopy the <code>PCWSTR</code> into an <code>HSTRING</code>.\nCopy the <code>PWSTR</code> into an <code>HSTRING</code>.\nGet the contents of this <code>HSTRING</code> as a OsString.\nCopy the <code>PCSTR</code> into a Rust <code>String</code>.\nCopy the <code>PCWSTR</code> into a Rust <code>String</code>.\nCopy the <code>PSTR</code> into a Rust <code>String</code>.\nCopy the <code>PWSTR</code> into a Rust <code>String</code>.\nGet the contents of this <code>HSTRING</code> as a String lossily.\nConverts a <code>GUID</code> to a <code>u128</code> value.\nAsserts that <code>self</code> is a success code.\nAttempts to upgrade the weak reference to a strong …\nA literal UTF-16 wide string with a trailing null …\nA literal UTF-16 wide string with a trailing null …\nCreates an array of the given length with default values.\nCreates a <code>GUID</code> represented by the all-zero byte-pattern.")