searchState.loadedDescShard("metrics_exporter_prometheus", 0, "A <code>metrics</code>-compatible exporter for sending metrics to …\nErrors that could occur while building or installing a …\nDistribution type.\nBuilds distributions for metric names based on a set of …\nBucket bounds or quantiles were empty.\nThere was an issue when creating the HTTP listener.\nThere was an issue when creating the necessary Tokio …\nInstalling the recorder did not succeed.\nMatches the entire metric name.\nA Prometheus histogram.\nThe given address could not be parsed successfully as an …\nThe given push gateway endpoint is not a valid URI.\nMatches a metric name in a specific way.\nNo exporter configuration was present.\nMatches the beginning of the metric name.\nBuilder for creating and installing a Prometheus …\nHandle for accessing metrics stored via <code>PrometheusRecorder</code>.\nA Prometheus recorder.\nMatches the end of the metric name.\nA Prometheus summary.\nAdds an IP address or subnet to the allowlist for the …\nAdds a global label to this exporter.\nBuilds the recorder and exporter and returns them both.\nBuilds the recorder and returns it.\nHelpers for rendering metrics in the Prometheus exposition …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a distribution for the given metric key.\nReturns the distribution type for the given metric key.\nGets a <code>PrometheusHandle</code> to this recorder.\nSets the idle timeout for metrics.\nBuilds the recorder and exporter and installs them …\nBuilds the recorder and installs it globally, returning a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the given key matches this matcher.\nCreates a new <code>PrometheusBuilder</code>.\nCreates a new instance of <code>DistributionBuilder</code>.\nCreates a histogram distribution.\nCreates a summary distribution.\nRecords the given <code>samples</code> in the current distribution.\nTakes a snapshot of the metrics held by the recorder and …\nSets the buckets to use when rendering histograms.\nSets the bucket for a specific pattern.\nSets the quantiles to use when rendering histograms.\nConfigures the exporter to expose an HTTP listener that …\nConfigures the exporter to push periodic requests to a …\nBreaks a key into the name and label components, with …\nSanitizes a metric description to be valid under the …\nSanitizes a label key to be valid under the Prometheus …\nSanitizes a label value to be valid under the Prometheus …\nSanitizes a metric name to be valid under the Prometheus …\nWrites a help (description) line in the Prometheus …\nWrites a metric in the Prometheus exposition format.\nWrites a metric type line in the Prometheus exposition …")