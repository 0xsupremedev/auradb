searchState.loadedDescShard("histogram", 0, "This crate provides histogram implementations that are …\nA histogram that uses atomic 64bit counters for each …\nA bucket represents a quantized range of values and a …\nThe configuration of a histogram which determines the …\nErrors returned for histogram construction and operations.\nA histogram that uses plain 64bit counters for each bucket.\nA snapshot of a histogram across a time range.\nThis histogram is a sparse, columnar representation of the …\nIncrement the bucket that contains the value by some count.\nAdd some count to the counter for the bucket corresponding …\nGet a mutable reference to the raw counters.\nGet a reference to the raw counters.\nAppends the provided snapshot onto this snapshot, …\nAdds the other histogram to this histogram and returns the …\nMerges two snapshots which cover the same time range.\nAppends the provided snapshot onto this snapshot, …\nReturns the bucket configuration of the snapshot.\nReturns the bucket configuration of the histogram.\nparameters representing the resolution and the range of …\nReturns the number of observations within the bucket’s …\nhistogram bucket counts corresponding to the indices\nReturns a new downsampled histogram with a reduced …\nReturns a new histogram with a reduced grouping power. The …\nReturns a new histogram with a reduced grouping power. The …\nReturns the inclusive upper bound for the bucket.\nReturns the relative error (in percentage) of this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the grouping power that was used to create this …\nIncrement the bucket that contains the value by one.\nIncrement the counter for the bucket corresponding to the …\nindices for the non-zero buckets in the histogram\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the max value power that was used to create this …\nConstruct a new atomic histogram from the provided …\nCreate a new histogram <code>Config</code> from the parameters. See the …\nConstruct a new histogram from the provided parameters. …\nConstruct a new histogram from the provided parameters. …\nReturn a single percentile from this snapshot.\nReturn a single percentile from this histogram.\nReturn a single percentile from this histogram.\nReturn a collection of percentiles from this snapshot.\nReturn a collection of percentiles from this histogram.\nReturns the range for the bucket.\nReturn the time range of the snapshot.\nProduce a snapshot from this histogram.\nProduce a snapshot from this histogram.\nReturns the inclusive lower bound for the bucket.\nReturn the total number of buckets needed for this config.\nCreates a new atomic histogram using a provided …\nCreates a new histogram using a provided <code>crate::Config</code>.\nCreates a new histogram using a provided <code>crate::Config</code>.\nAppends the provided snapshot onto this snapshot, …\nAdds the other histogram to this histogram and returns the …\nAdds the other histogram to this histogram and returns the …\nAppends the provided snapshot onto this snapshot, …")